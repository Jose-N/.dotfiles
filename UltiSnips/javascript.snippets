# -------------REGULAR JAVASCRIPT----------------
snippet fetch "fetch api"
fetch('$1')
	.then(response => {
		if (response.ok) {
			console.log('response ok')
			return response.$2
		}else {
			let error = new Error(`${3:response.status} (${4:response.statusText})`)
			throw(error)
		}
	})
	.then($5 => {
		$6
	})
	.catch(error => console.error(`Error in fetch: ${7:error.message}`))
endsnippet

snippet fetch_post "fetch api with a post method"
fetch('$1', {method: "POST", body :JSON.stringify($2)})
	.then(response => {
		if (response.ok) {
			console.log('response ok')
			return response.$3
		}else {
			let error = new Error(`${4:response.status} (${5:response.statusText})`)
			throw(error)
		}
	})
	.then($6 => {
		$7
	})
	.catch(error => console.error(`Error in fetch: ${8:error.message}`))
endsnippet

snippet promise_return "returns a promise for use in functions"
return new Promise((resolve, reject) => {
	if($1) {
		resolve($2)
	} else {
		reject($3)
		}
})
endsnippet

snippet function_one_line "creates a basic function in js"
let $1 = ($2) => { $3 }
endsnippet

snippet function_multi_line "creates a mutli line function"
let $1 = ($2) => {
	$3
}
endsnippet

snippet then_catch "add .then and .catch" b
.then (($1) => {
	$2
})
.catch(($3) => {
	$4
})
endsnippet

# -------------REACT.JS----------------
snippet react_import_and_dom "imports packages to implement React"
import React from 'react';
import ReactDOM from 'react-dom';
endsnippet

snippet dumb_component "create a component in react"
import React from 'react';

const $1 = props => {
	return (
		<div className='$1'>
			$2
		</div>
	);
}; 

export default $1;
endsnippet

snippet smart_component "create a component in react"
import React, {Component} from 'react';

class $1 extends Component {
	constructor(props) {
		super(props);
		this.state={
		}
	}

	render() {

	return (
		<div className="$1">
			$2
		</div>
	)
	}
}
export default $1;
endsnippet

snippet component_import "import a component into main.js"
import $1 from './components/$1';
endsnippet

snippet react_dom_render "renders JSX to DOM"
ReactDOM.render(
	$1,
	document.getElementById('$2')
);
endsnippet

snippet react_tag "creates a react tag" w
< $1 />
endsnippet

snippet for_loop "loop through an array in react" w
{$1.map(($2) => $3 )}
endsnippet

snippet start_router "set up page for React Router"
import React, { Component } from 'react';
import { Router, Route, IndexRoute, browserHistory } from 'react-router';

class $1 extends Component {

	constructor(props){
		super(props)
		this.state = {

		}
	}

	render() {
	return(
		<Router history={browserHistory}>
			<Route path='/' component={$2} >
				<IndexRoute component={$3} />
				<Route path='$4' component={$4} />
			</Route>
		</Router>
		)
	}
}
export default $1;
endsnippet

snippet create_main "create main page and render to DOM"
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App'

ReactDOM.render(
	<App />,
	document.getElementById('app')
);
endsnippet

snippet link_tag "create link tag" w
<Link to='$1'>$2</Link>
endsnippet
# -------------ENZYME TESTING----------------

snippet react_test 
import $1 from '../../src/$2/$1';
import { mount } from 'enzyme';
import React from 'react';

describe('$1, () => {

	beforeEach(() => {
	wrapper = mount(
	);
	});

	it('$3', () => {
		expect(wrapper.find('$4').$5).$6;
	});
});
endsnippet
